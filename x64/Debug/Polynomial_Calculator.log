  Polynomial_Calculator.cpp
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\utility(491,56): error C2676: binary '==': 'const _Ty2' does not define this operator or a conversion to a type acceptable to the predefined operator
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\utility(491,56): error C2676:         with
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\utility(491,56): error C2676:         [
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\utility(491,56): error C2676:             _Ty2=Rational
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\utility(491,56): error C2676:         ]
  (compiling source file 'Polynomial_Calculator.cpp')
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\utility(490,27):
  could be 'bool std::operator ==(const std::pair<_Ty1,_Ty2> &,const std::pair<_Uty1,_Uty2> &)'
  	C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\utility(491,48):
  	'bool std::operator ==(const std::pair<_Ty1,_Ty2> &,const std::pair<_Uty1,_Uty2> &)': could not deduce template argument for 'const std::pair<_Ty1,_Ty2> &' from 'const _Ty2'
          with
          [
              _Ty2=Rational
          ]
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\utility(491,56):
  the template instantiation context (the oldest one first) is
  	C:\Users\kalka\OneDrive\Desktop\Polynomial_Calculator\Polynomial_Calculator\Polynomial_Calculator.cpp(689,84):
  	see reference to function template instantiation 'bool std::operator ==<std::pair<int,Rational>,std::allocator<std::pair<int,Rational>>>(const std::vector<std::pair<int,Rational>,std::allocator<std::pair<int,Rational>>> &,const std::vector<std::pair<int,Rational>,std::allocator<std::pair<int,Rational>>> &)' being compiled
  	C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\vector(2238,21):
  	see reference to function template instantiation 'bool std::equal<const std::pair<int,Rational>*,const std::pair<int,Rational>*>(const _InIt1,const _InIt1,const _InIt2)' being compiled
          with
          [
              _InIt1=const std::pair<int,Rational> *,
              _InIt2=const std::pair<int,Rational> *
          ]
  	C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\xutility(5277,17):
  	see reference to function template instantiation 'bool std::equal<_InIt1,_InIt2,std::equal_to<void>>(const _InIt1,const _InIt1,const _InIt2,_Pr)' being compiled
          with
          [
              _InIt1=const std::pair<int,Rational> *,
              _InIt2=const std::pair<int,Rational> *,
              _Pr=std::equal_to<void>
          ]
  	C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\xutility(5260,14):
  	see reference to function template instantiation 'bool std::equal_to<void>::operator ()<const std::pair<int,Rational>&,const std::pair<int,Rational>&>(_Ty1,_Ty2) noexcept(false) const' being compiled
          with
          [
              _Ty1=const std::pair<int,Rational> &,
              _Ty2=const std::pair<int,Rational> &
          ]
  	C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\xutility(487,43):
  	see reference to function template instantiation 'bool std::operator ==<int,Rational,int,Rational>(const std::pair<int,Rational> &,const std::pair<int,Rational> &)' being compiled
  
